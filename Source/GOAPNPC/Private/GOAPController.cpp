/**
	GOAP NPC: Goal-Oriented Action Planning for Non-Player Characters
	Copyright © 2022 Narratech Laboratories

	Authors: Diego Romero-Hombrebueno Santos, Mario Sánchez Blanco, José Manuel Sierra Ramos, Daniel Gil Aguilar and Federico Peinado
	Website: https://narratech.com/project/goap-npc/
 */
#include "GOAPController.h"
#include "GOAPPlannerComponent.h"

AGOAPController::AGOAPController()
{
	PlannerComponent = CreateDefaultSubobject<UGOAPPlannerComponent>(TEXT("GOAPPlannerComponent"));
}

void AGOAPController::BeginPlay()
{
	Super::BeginPlay();
}

void AGOAPController::OnPossess(APawn* pawn)
{
	Super::OnPossess(pawn);
}

void AGOAPController::Tick(float DeltaSeconds)
{
	Super::Tick(DeltaSeconds);
}

bool AGOAPController::executeGOAP()
{
	if (!GetPawn())
		return false;

	if (PlannerComponent->GeneratePlan(GetPawn()))
	{
		debugInfo();
		return PlannerComponent->PerformSingleAction(GetPawn());
	}

	return false;
}

void AGOAPController::debugInfo()
{
	if (!debug || !GEngine || !GetPawn())
		return;

	FString name = GetPawn()->GetName();

	GEngine->AddOnScreenDebugMessage(-1, 5.f, FColor::Red, TEXT("Plan generated by: " + name), false);
	if (controller)GEngine->AddOnScreenDebugMessage(-1, 5.f, FColor::Red, TEXT("controller: " + this->GetName()), false);
	//GEngine->AddOnScreenDebugMessage(-1, 5.f, FColor::Red, TEXT("\n"), false);

	auto plan = PlannerComponent->GetPlan();
	for (int i = 0; i < plan.Num(); i++) {
		if (i != 0) GEngine->AddOnScreenDebugMessage(-1, 5.f, FColor::Orange, TEXT("--->"), false);
		FString action = plan[i]->GetName();
		GEngine->AddOnScreenDebugMessage(-1, 5.f, FColor::Orange, TEXT("" + action), false);
	}

	GEngine->AddOnScreenDebugMessage(-1, 5.f, FColor::Orange, TEXT("\n"), false);
}
